"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const group_1 = require("../../../modules/workspace/group");
const validate_1 = require("../../../modules/validate");
const auth_1 = require("../../../modules/auth");
const mangeRole_middleware_1 = __importDefault(require("../../../modules/workspace/mangeRole.middleware"));
const router = express_1.default.Router();
router.post('/', (0, auth_1.auth)('createGroup'), mangeRole_middleware_1.default, (0, validate_1.validate)(group_1.groupvalidation.groupValidationSchema), group_1.groupcontroller.createGroupController);
router.get('/workspace/:workspaceId', (0, auth_1.auth)('getWorkspaceGroups'), mangeRole_middleware_1.default, group_1.groupcontroller.getWorkspaceGroupsController);
router.get('/workspace/:workspaceId/names', (0, auth_1.auth)('getWorkspaceGroupNames'), mangeRole_middleware_1.default, group_1.groupcontroller.getGroupNamesController);
router.get('/:workspaceId/:groupId/members', (0, auth_1.auth)('getGroupMembers'), mangeRole_middleware_1.default, group_1.groupcontroller.getGroupMembersController);
router.post('/:workspaceId/:groupId/members', (0, auth_1.auth)('addGroupMember'), mangeRole_middleware_1.default, group_1.groupcontroller.addMemberToGroupController);
router.delete('/:workspaceId/:groupId/:memberId', (0, auth_1.auth)('removeGroupMember'), mangeRole_middleware_1.default, group_1.groupcontroller.removeMemberFromGroupController);
router.get('/:workspaceId/:groupId', (0, auth_1.auth)('getSingleGroup'), mangeRole_middleware_1.default, group_1.groupcontroller.getGroupController);
router.patch('/:workspaceId/:groupId', (0, auth_1.auth)('updateGroup'), mangeRole_middleware_1.default, (0, validate_1.validate)(group_1.groupvalidation.updateGroupValidationSchema), group_1.groupcontroller.updateGroupController);
router.delete('/:workspaceId/:groupId', (0, auth_1.auth)('deleteGroup'), mangeRole_middleware_1.default, group_1.groupcontroller.deleteGroupController);
exports.default = router;
