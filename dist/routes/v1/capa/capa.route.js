"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const workspace_1 = require("../../../modules/workspace");
const validate_1 = require("../../../modules/validate");
const auth_1 = require("../../../modules/auth");
const mangeRole_middleware_1 = __importDefault(require("../../../modules/workspace/mangeRole.middleware"));
const activitylogs_middleware_1 = require("../../../modules/activitylogs/activitylogs.middleware");
const router = express_1.default.Router();
router.post("/", (0, auth_1.auth)('manageCapa'), (0, validate_1.validate)(workspace_1.workspaceValidation.createCapa), activitylogs_middleware_1.activityLoggerMiddleware, workspace_1.workspaceController.createCapaworkspaceController);
router.get("/:moduleId", (0, auth_1.auth)('manageCapa'), workspace_1.workspaceController.getAllCapaworkspacesController);
router.patch("/module/:workspaceId", (0, auth_1.auth)('manageCapa'), mangeRole_middleware_1.default, (0, validate_1.validate)(workspace_1.workspaceValidation.updateCapa), activitylogs_middleware_1.activityLoggerMiddleware, workspace_1.workspaceController.updateCapaworkspaceController);
router.delete("/module/:workspaceId", (0, auth_1.auth)('manageCapa'), mangeRole_middleware_1.default, activitylogs_middleware_1.activityLoggerMiddleware, workspace_1.workspaceController.deleteCapaworkspaceController);
router.get("/module/:workspaceId", (0, auth_1.auth)('getWorkspaceById'), mangeRole_middleware_1.default, workspace_1.workspaceController.getCapaworkspaceByIdController);
router.get("/module/:workspaceId/analytics", (0, auth_1.auth)('manageCapa'), workspace_1.workspaceController.getCapaworkspaceAnalyticsController);
router.get("/module/:workspaceId/riskanalytics", (0, auth_1.auth)('manageCapa'), workspace_1.workspaceController.getRiskworkspaceAnalyticsController);
router.get("/module/:workspaceId/attention", (0, auth_1.auth)('needAttention'), workspace_1.workspaceController.AttentionController);
router.get("/module/:workspaceId/filter", (0, auth_1.auth)('manageCapa'), workspace_1.workspaceController.filterPreviewReportController);
router.get("/module/:workspaceId/riskfilter", (0, auth_1.auth)('manageCapa'), workspace_1.workspaceController.filterPreviewRiskReportController);
exports.default = router;
