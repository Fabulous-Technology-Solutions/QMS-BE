{
	"info": {
		"_postman_id": "site-api-collection",
		"name": "Site Management API",
		"description": "Collection for testing Site Management endpoints in QMS system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Site",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Main Production Site\",\n  \"location\": \"New York, USA\",\n  \"timeZone\": \"America/New_York\",\n  \"siteCode\": \"NYC001\",\n  \"note\": \"Primary manufacturing facility\",\n  \"modules\": [\"{{moduleId1}}\", \"{{moduleId2}}\"]\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/v1/sites",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"sites"
					]
				},
				"description": "Creates a new site with the provided information. Requires 'manageSites' permission."
			},
			"response": []
		},
		{
			"name": "Get All Sites",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/sites?page=1&limit=10&search=production",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"sites"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"description": "Page number for pagination"
						},
						{
							"key": "limit",
							"value": "10",
							"description": "Number of sites per page"
						},
						{
							"key": "search",
							"value": "production",
							"description": "Search term to filter sites by name"
						}
					]
				},
				"description": "Retrieves all sites with pagination support. Access is role-based: admins see sites they created, sub-admins see sites created by their parent admin."
			},
			"response": []
		},
		{
			"name": "Get Site by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/sites/{{siteId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"sites",
						"{{siteId}}"
					]
				},
				"description": "Retrieves a specific site by its ID. Requires 'manageSites' permission."
			},
			"response": []
		},
		{
			"name": "Update Site",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Updated Production Site\",\n  \"location\": \"Brooklyn, New York, USA\",\n  \"timeZone\": \"America/New_York\",\n  \"siteCode\": \"NYC001-UPD\",\n  \"note\": \"Updated primary manufacturing facility with new equipment\",\n  \"modules\": [\"{{moduleId1}}\", \"{{moduleId3}}\"]\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/v1/sites/{{siteId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"sites",
						"{{siteId}}"
					]
				},
				"description": "Updates an existing site. Access is role-based: admins can update sites they created, sub-admins can update sites created by their parent admin."
			},
			"response": []
		},
		{
			"name": "Delete Site",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/sites/{{siteId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"sites",
						"{{siteId}}"
					]
				},
				"description": "Deletes a site. Access is role-based: admins can delete sites they created, sub-admins can delete sites created by their parent admin."
			},
			"response": []
		},
		{
			"name": "Get Site Names by Module",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/sites/names/{{moduleId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"sites",
						"names",
						"{{moduleId}}"
					]
				},
				"description": "Retrieves site names that are associated with a specific module. Returns only the site names for lightweight operations."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// You can add pre-request scripts here",
					"// For example, to automatically refresh tokens or set dynamic variables"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test scripts",
					"pm.test(\"Status code is not 500\", function () {",
					"    pm.expect(pm.response.code).to.not.equal(500);",
					"});",
					"",
					"pm.test(\"Response time is less than 5000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"description": "Base URL for the API"
		},
		{
			"key": "token",
			"value": "",
			"description": "JWT authentication token"
		},
		{
			"key": "siteId",
			"value": "",
			"description": "Site ID for operations requiring a specific site"
		},
		{
			"key": "moduleId",
			"value": "",
			"description": "Module ID for module-related operations"
		},
		{
			"key": "moduleId1",
			"value": "",
			"description": "First module ID for testing"
		},
		{
			"key": "moduleId2",
			"value": "",
			"description": "Second module ID for testing"
		},
		{
			"key": "moduleId3",
			"value": "",
			"description": "Third module ID for testing"
		}
	]
}
